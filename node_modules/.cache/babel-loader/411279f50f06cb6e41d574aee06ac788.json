{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web Technologies\\\\Projects\\\\React JS\\\\todolist\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ListItems from './ListItems';\nimport Fab from '@mui/material/Fab';\nimport AddIcon from '@mui/icons-material/Add';\nimport ClearAllIcon from '@mui/icons-material/ClearAll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // fetching data from localStorage\n  const localStorageData = () => {\n    const list = localStorage.getItem('toDos');\n\n    if (list) {\n      return JSON.parse(list);\n    } else {\n      return [];\n    }\n  };\n\n  const [input, setInput] = useState('');\n  const [item, setItem] = useState(localStorageData()); // capturing inputes\n\n  const inputEvent = event => {\n    setInput(event.target.value);\n  }; // hndling click event and addding, formatting and checking entry \n\n\n  const addEvent = () => {\n    let slicedInput;\n    input.length < 27 ? slicedInput = input : slicedInput = `${input.slice(0, 27)}...`;\n    input !== '' ? setItem([...item, slicedInput]) : alert('Enter an item !');\n    setInput('');\n  }; // handling keyPress and adding item on pressing enter button\n\n\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      addEvent();\n    }\n  }; // handling item deletion\n\n\n  const deleteItems = id => {\n    console.log('deleted');\n    setItem(old => {\n      return old.filter((arr, index) => index !== id);\n    });\n  }; // handling clear(delete) all\n\n\n  const deleteAll = () => {\n    console.log('All deleted.');\n    setItem([]);\n  }; // storing data to localStorage\n\n\n  useEffect(() => localStorage.setItem('toDos', JSON.stringify(item)), [item]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"To Do List\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"clear-all\",\n            title: \"Clear All\",\n            onClick: deleteAll,\n            children: /*#__PURE__*/_jsxDEV(ClearAllIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-and-button\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add an item\",\n            onChange: inputEvent,\n            onKeyPress: handleKeyPress,\n            value: input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Fab, {\n            className: \"add-btn\",\n            onClick: addEvent,\n            children: [\" \", /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 70\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: item.map((value, indx) => {\n            return /*#__PURE__*/_jsxDEV(ListItems, {\n              id: indx,\n              ListItemvalue: value,\n              deleteItems: deleteItems\n            }, indx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: \"Note : Editings and Checks will no be stored, those are for temporary use.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"JLJe8qwpJ8xjJzCL1xx2r1Fp300=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/Web Technologies/Projects/React JS/todolist/src/App.jsx"],"names":["React","useEffect","useState","ListItems","Fab","AddIcon","ClearAllIcon","App","localStorageData","list","localStorage","getItem","JSON","parse","input","setInput","item","setItem","inputEvent","event","target","value","addEvent","slicedInput","length","slice","alert","handleKeyPress","key","deleteItems","id","console","log","old","filter","arr","index","deleteAll","stringify","map","indx"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ListItems from './ListItems';\r\nimport Fab from '@mui/material/Fab';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport ClearAllIcon from '@mui/icons-material/ClearAll';\r\n\r\n\r\nconst App = () => {\r\n\r\n    // fetching data from localStorage\r\n    const localStorageData = () => {\r\n        const list = localStorage.getItem('toDos')\r\n\r\n        if(list) {\r\n            return JSON.parse(list);\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    \r\n    const [input, setInput] = useState('');\r\n    const [item, setItem] = useState(localStorageData());\r\n\r\n    // capturing inputes\r\n    const inputEvent = (event) => {\r\n        setInput(event.target.value);\r\n    }\r\n    \r\n    // hndling click event and addding, formatting and checking entry \r\n    const addEvent = () => {\r\n        let slicedInput;\r\n        input.length < 27 ? (slicedInput = input) : (slicedInput = `${input.slice(0,27)}...`);\r\n        input !== '' ? setItem([...item,slicedInput]) : alert('Enter an item !');\r\n        setInput('');\r\n    }\r\n\r\n    // handling keyPress and adding item on pressing enter button\r\n    const handleKeyPress = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            addEvent();\r\n          }    \r\n    }\r\n\r\n    // handling item deletion\r\n    const deleteItems = (id) => {\r\n        console.log('deleted');\r\n\r\n        setItem((old) => {\r\n            return old.filter((arr, index) => index !== id)\r\n        });\r\n    }\r\n\r\n    // handling clear(delete) all\r\n    const deleteAll = () => {\r\n        console.log('All deleted.');\r\n\r\n        setItem([]);\r\n    }\r\n\r\n\r\n    // storing data to localStorage\r\n    useEffect(() => localStorage.setItem('toDos', JSON.stringify(item)), [item]);\r\n\r\n   \r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"main\">\r\n                    <h1>To Do List \r\n                    <span className='clear-all' title='Clear All' onClick={deleteAll}>\r\n                    <ClearAllIcon />\r\n                    </span>\r\n                </h1>\r\n                    <div className=\"input-and-button\">\r\n                        <input type=\"text\" placeholder='Add an item' onChange={inputEvent} onKeyPress={handleKeyPress} value={input}/>\r\n                        <Fab className='add-btn' onClick={addEvent}> <AddIcon /> </Fab>\r\n                        <hr/>\r\n                    </div>\r\n                    <ul>\r\n                        {\r\n                            item.map((value, indx) => {\r\n                                return (\r\n                                    <ListItems             \r\n                                    key={indx}\r\n                                    id={indx}\r\n                                    ListItemvalue={value}\r\n                                    deleteItems={deleteItems}\r\n                                    />                 \r\n                                );\r\n                            })\r\n                        }\r\n\r\n                    </ul>\r\n                </div>\r\n                <nav>Note : Editings and Checks will no be stored, those are for temporary use.</nav>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}
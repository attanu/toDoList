{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web Technologies\\\\React JS\\\\Revesion\\\\myapp\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [item, setItem] = useState([]);\n\n  const inputEvent = event => {\n    setInput(event.target.value);\n  };\n\n  const addEvent = event => {\n    input !== '' ? setItem([...item, input]) : alert('Enter an item !');\n  }; // splice up the string\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"To Do List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-and-button\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add an item\",\n            onChange: inputEvent,\n            value: input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-btn\",\n            onClick: addEvent,\n            children: \" + \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: item.map(value => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"check-btn\",\n                  children: \"\\u2714\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 38\n                }, this), value, /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-btn\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"far fa-trash-alt\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 39\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 39\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 37\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"bTHvp9efu2WGjJWixagim+0/4Fs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/Web Technologies/React JS/Revesion/myapp/src/App.jsx"],"names":["React","useState","App","input","setInput","item","setItem","inputEvent","event","target","value","addEvent","alert","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMM,UAAU,GAAIC,KAAD,IAAW;AAC1BJ,IAAAA,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACH,GAFD;;AAIA,QAAMC,QAAQ,GAAIH,KAAD,IAAW;AAExBL,IAAAA,KAAK,KAAK,EAAV,GAAeG,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAASF,KAAT,CAAD,CAAtB,GAA0CS,KAAK,CAAC,iBAAD,CAA/C;AACH,GAHD,CATc,CAcd;;;AACA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,kCACI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC,aAA/B;AAA6C,YAAA,QAAQ,EAAEL,UAAvD;AAAmE,YAAA,KAAK,EAAEJ;AAA1E;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,SAAS,EAAC,SAAlB;AAA4B,YAAA,OAAO,EAAEQ,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAOI;AAAA,oBAIQN,IAAI,CAACQ,GAAL,CAAUH,KAAD,IAAW;AAChB,gCACI;AAAA,qCACA;AAAA,wCACC;AAAQ,kBAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,EAEGA,KAFH,eAGE;AAAQ,kBAAA,SAAS,EAAC,YAAlB;AAAA,yCACA;AAAG,oBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,wBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,6BADJ;AAWH,WAZD;AAJR;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAkCH,CAjDD;;GAAMR,G;;KAAAA,G;AAmDN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst App = () => {\r\n\r\n    const [input, setInput] = useState('');\r\n    const [item, setItem] = useState([]);\r\n\r\n    const inputEvent = (event) => {\r\n        setInput(event.target.value);\r\n    }\r\n    \r\n    const addEvent = (event) => {\r\n\r\n        input !== '' ? setItem([...item,input]) : alert('Enter an item !');\r\n    }\r\n\r\n    // splice up the string\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"main\">\r\n                    <h1>To Do List</h1>\r\n                    <div className=\"input-and-button\">\r\n                        <input type=\"text\" placeholder='Add an item' onChange={inputEvent} value={input}/>\r\n                        <button className='add-btn' onClick={addEvent}> + </button>\r\n                        <hr/>\r\n                    </div>\r\n                    <ul>\r\n                        {/* <li> <button className='check-btn'>✔</button> {input} <button className='delete-btn'><i className=\"far fa-trash-alt\"></i></button></li> */}\r\n\r\n                        {\r\n                            item.map((value) => {\r\n                                return (\r\n                                    <>\r\n                                    <li>\r\n                                     <button className='check-btn'>✔</button>\r\n                                      {value} \r\n                                      <button className='delete-btn'>\r\n                                      <i className=\"far fa-trash-alt\"></i>\r\n                                      </button>\r\n                                     </li>         \r\n                                    </>\r\n                                );\r\n                            })\r\n                        }\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}